'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import Link from 'next/link';
import { CalendarIcon, ClockIcon, AcademicCapIcon, ArrowRightIcon } from '@heroicons/react/24/outline';

interface Course {
  _id: string;
  title: string;
  description: string;
  thumbnail: {
    url: string;
  };
  level: string;
  category: string;
  progress: {
    completedLessons: number;
    totalLessons: number;
    percentage: number;
    lastAccessedAt: string;
  };
}

interface UserData {
  name: string;
  email: string;
  role: string;
}

export default function Dashboard() {
  const router = useRouter();
  const [courses, setCourses] = useState<Course[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [user, setUser] = useState<UserData | null>(null);

  useEffect(() => {
    const token = localStorage.getItem('token');
    
    if (!token) {
      router.push('/login');
      return;
    }
    
    const fetchUserData = async () => {
      try {
        // Fetch user profile
        const userRes = await fetch('/api/v1/auth/me', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        
        if (!userRes.ok) {
          throw new Error('Failed to fetch user profile');
        }
        
        const userData = await userRes.json();
        setUser(userData.data);
        
        // Fetch enrolled courses with progress
        const coursesRes = await fetch('/api/v1/courses/enrolled', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        
        if (!coursesRes.ok) {
          throw new Error('Failed to fetch enrolled courses');
        }
        
        const coursesData = await coursesRes.json();
        setCourses(coursesData.data);
      } catch (err) {
        setError('Failed to load dashboard data');
        console.error(err);
      } finally {
        setLoading(false);
      }
    };
    
    fetchUserData();
  }, [router]);

  const formatDate = (dateString: string) => {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'short', 
      day: 'numeric' 
    });
  };

  if (loading) {
    return (
      <div className="min-h-[calc(100vh-64px)] flex items-center justify-center bg-white">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-[#0091ff] mx-auto"></div>
          <p className="mt-4 text-gray-600">Loading dashboard...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-white min-h-[calc(100vh-64px)] py-10">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="mb-10">
          <h1 className="text-3xl font-bold text-gray-900">Dashboard</h1>
          <p className="mt-1 text-gray-500">
            Welcome back, {user?.name || 'Student'}!
          </p>
        </div>

        {error && (
          <div className="mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
            {error}
          </div>
        )}

        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="md:col-span-2">
            <div className="bg-white shadow-md rounded-lg overflow-hidden">
              <div className="px-6 py-5 border-b border-gray-200">
                <h2 className="text-xl font-semibold text-gray-900">Your Courses</h2>
              </div>
              <div className="px-6 py-5">
                {courses.length === 0 ? (
                  <div className="text-center py-8">
                    <AcademicCapIcon className="h-12 w-12 text-gray-400 mx-auto" />
                    <h3 className="mt-2 text-lg font-medium text-gray-900">No courses yet</h3>
                    <p className="mt-1 text-gray-500">
                      You haven&apos;t enrolled in any courses yet.
                    </p>
                    <div className="mt-6">
                      <Link 
                        href="/courses" 
                        className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#0091ff] hover:bg-blue-600"
                      >
                        Browse Courses
                        <ArrowRightIcon className="ml-2 h-4 w-4" />
                      </Link>
                    </div>
                  </div>
                ) : (
                  <div className="grid grid-cols-1 gap-6">
                    {courses.map((course) => (
                      <div key={course._id} className="flex flex-col sm:flex-row border border-gray-200 rounded-lg overflow-hidden">
                        <div className="sm:w-48 h-48 sm:h-auto relative">
                          <Image
                            src={course.thumbnail?.url || 'https://placehold.co/400x300/0091ff/FFFFFF/png?text=Course'}
                            alt={course.title}
                            fill
                            className="object-cover"
                          />
                        </div>
                        <div className="flex-1 p-4 flex flex-col justify-between">
                          <div>
                            <h3 className="text-lg font-medium text-gray-900">{course.title}</h3>
                            <p className="mt-1 text-sm text-gray-500 line-clamp-2">{course.description}</p>
                            
                            <div className="mt-2 flex items-center text-sm text-gray-500">
                              {course.level && (
                                <span className="inline-flex items-center mr-4">
                                  <AcademicCapIcon className="h-4 w-4 mr-1" />
                                  {course.level.charAt(0).toUpperCase() + course.level.slice(1)}
                                </span>
                              )}
                              {course.category && (
                                <span className="inline-flex items-center">
                                  <CalendarIcon className="h-4 w-4 mr-1" />
                                  {course.category}
                                </span>
                              )}
                            </div>
                            
                            <div className="mt-4">
                              <div className="flex items-center justify-between text-sm">
                                <span>{course.progress.percentage}% Complete</span>
                                <span>
                                  {course.progress.completedLessons} / {course.progress.totalLessons} lessons
                                </span>
                              </div>
                              <div className="mt-1 w-full bg-gray-200 rounded-full h-2.5">
                                <div 
                                  className={`bg-[#0091ff] h-2.5 rounded-full w-progress-${Math.round(course.progress.percentage)}`}
                                ></div>
                              </div>
                            </div>
                          </div>
                          
                          <div className="mt-4 flex items-center justify-between">
                            <div className="text-xs text-gray-500 flex items-center">
                              <ClockIcon className="h-3.5 w-3.5 mr-1" />
                              <span>
                                Last accessed: {formatDate(course.progress.lastAccessedAt)}
                              </span>
                            </div>
                            <Link
                              href={`/courses/${course._id}`}
                              className="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-white bg-[#0091ff] hover:bg-blue-600"
                            >
                              Continue
                              <ArrowRightIcon className="ml-1 h-3 w-3" />
                            </Link>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
          
          <div className="md:col-span-1">
            <div className="bg-white shadow-md rounded-lg overflow-hidden">
              <div className="px-6 py-5 border-b border-gray-200">
                <h2 className="text-xl font-semibold text-gray-900">Your Stats</h2>
              </div>
              <div className="px-6 py-5">
                <div className="space-y-4">
                  <div>
                    <p className="text-sm text-gray-500">Enrolled Courses</p>
                    <p className="text-2xl font-semibold text-gray-900">{courses.length}</p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500">Completed Courses</p>
                    <p className="text-2xl font-semibold text-gray-900">
                      {courses.filter(course => course.progress.percentage === 100).length}
                    </p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500">Average Progress</p>
                    <p className="text-2xl font-semibold text-gray-900">
                      {courses.length > 0 
                        ? Math.round(courses.reduce((acc, course) => acc + course.progress.percentage, 0) / courses.length)
                        : 0}%
                    </p>
                  </div>
                </div>
                
                <div className="mt-6 pt-6 border-t border-gray-200">
                  <Link
                    href="/profile"
                    className="w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
                  >
                    View Profile
                  </Link>
                </div>
              </div>
            </div>
            
            <div className="mt-6 bg-white shadow-md rounded-lg overflow-hidden">
              <div className="px-6 py-5 border-b border-gray-200">
                <h2 className="text-xl font-semibold text-gray-900">Quick Links</h2>
              </div>
              <div className="px-6 py-5">
                <nav className="space-y-1">
                  <Link
                    href="/courses"
                    className="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50"
                  >
                    <ArrowRightIcon className="mr-3 h-4 w-4 text-gray-400" />
                    Browse Courses
                  </Link>
                  <Link
                    href="/payments/history"
                    className="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50"
                  >
                    <ArrowRightIcon className="mr-3 h-4 w-4 text-gray-400" />
                    Payment History
                  </Link>
                  <Link
                    href="/certificates"
                    className="flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50"
                  >
                    <ArrowRightIcon className="mr-3 h-4 w-4 text-gray-400" />
                    Your Certificates
                  </Link>
                </nav>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 